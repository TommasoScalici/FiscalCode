@page "/"

@using FiscalCode.Components.Shared
@using FiscalCode.Configuration
@using FiscalCode.Data
@using FiscalCode.Resources.Languages
@using FiscalCode.Services
@using System.Diagnostics

@inject IDialogService DialogService
@inject IStringLocalizer<Localization> Localizer;
@inject FiscalCodeDataService Service


<AppBar OnAddButtonClicked="OpenAddFormDialogAsync" />

<div class="flex flex-wrap flex-grow">
    @foreach (var item in fiscalCodes)
    {
        <Card FiscalCodeDTO="item" OnEdit="@(() => OpenEditFormDialogAsync(item))" OnDelete="DeleteFiscalCode" />
    }
</div>


@code {
    private List<FiscalCodeDTO> fiscalCodes = new();


    protected override async Task OnInitializedAsync()
    {
        var savedFiscalCodes = await FiscalCodeDataService.LoadFiscalCodesFromFileAsync();
        fiscalCodes.AddRange(savedFiscalCodes);
        await base.OnInitializedAsync();
    }

    private void DeleteFiscalCode(FiscalCodeDTO dto) => fiscalCodes.Remove(dto);

    private async Task OpenAddFormDialogAsync()
    {
        try
        {
            var dialog = await DialogService.ShowAsync<FormDialog>(Localizer["FillData"], Config.DialogOptions);
            var result = await dialog.Result;

            if (result.Data is FiscalCodeDTO dto)
            {
                dto.FiscalCode = await Service.CalculateFiscalCodeAsync(dto);
                fiscalCodes.Add(dto);
            }

            await FiscalCodeDataService.SaveFiscalCodesToFileAsync(fiscalCodes);
        }

        catch (Exception ex)
        {
            Debug.WriteLine(ex);
        }        
    }

    private async Task OpenEditFormDialogAsync(FiscalCodeDTO dto)
    {
        try
        {
            var parameters = new DialogParameters<FormDialog>();
            parameters.Add(d => d.FormData, dto);
            var dialog = await DialogService.ShowAsync<FormDialog>(Localizer["FillData"], parameters, Config.DialogOptions);
            var result = await dialog.Result;

            if (result.Data is FiscalCodeDTO modifiedDTO)
                dto.FiscalCode = await Service.CalculateFiscalCodeAsync(modifiedDTO);

            await FiscalCodeDataService.SaveFiscalCodesToFileAsync(fiscalCodes);
        }
        catch (Exception ex)
        {
            Debug.WriteLine(ex);
        }       
    }
}